#######################################
# spray-servlet Reference Config File #
#######################################

# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.

# Akka specific

akka {
  loglevel = DEBUG
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
}

smrt-server {
  name = "Secondary Internal Analysis SMRT Server"
  display-name = "Secondary Internal Analysis SMRT Server. A SMRT Server for internal analysis."
}

pb-services {
  # This can be provided as just a path or with jdbc:h2: prefix
  db-uri = "jdbc:h2:/tmp/analysis_services"
  db-uri = ${?PB_SERVICES_DB_URI}
  legacy-sqlite-uri = "jdbc:sqlite:db/analysis_services.db"
  host = "0.0.0.0"
  port = 8090
  port = ${?PB_SERVICES_PORT}
}

spray.servlet {

  # The FQN (Fully Qualified Name) of the class to load when the
  # servlet context is initialized (e.g. "com.example.ApiBoot").
  # The class must have a constructor with a single
  # `javax.servlet.ServletContext` parameter and implement
  # the `spray.servlet.WebBoot` trait.
  boot-class = "com.pacbio.secondaryinternal.SecondaryInternalAnalysisServlet"

  # If a request hasn't been responded to after the time period set here
  # a `spray.http.Timedout` message will be sent to the timeout handler.
  # Set to `infinite` to completely disable request timeouts.
  request-timeout = 30 s

  # After a `Timedout` message has been sent to the timeout handler and the
  # request still hasn't been completed after the time period set here
  # the server will complete the request itself with an error response.
  # Set to `infinite` to disable timeout timeouts.
  timeout-timeout = 500 ms

  # The path of the actor to send `spray.http.Timedout` messages to.
  # If empty all `Timedout` messages will go to the "regular" request handling actor.
  timeout-handler = ""

  # A path prefix that is automatically "consumed" before the request is
  # being dispatched to the HTTP service route.
  # Can be used to match servlet context paths configured for the application.
  # Make sure to include a leading slash with your prefix, e.g. "/foobar".
  # Set to `AUTO` to make spray-servlet pick up the ServletContext::getContextPath.
  root-path = AUTO

  # Enables/disables the addition of a `Remote-Address` header
  # holding the clients (remote) IP address.
  remote-address-header = off

  # Enables/disables the returning of more detailed error messages to
  # the client in the error response.
  # Should be disabled for browser-facing APIs due to the risk of XSS attacks
  # and (probably) enabled for internal or non-browser APIs.
  # Note that spray will always produce log messages containing the full error details.
  verbose-error-messages = off

  # The maximum size of the request entity that is still accepted by the server.
  # Requests with a greater entity length are rejected with an error response.
  # Must be greater than zero.
  max-content-length = 5 m

  # Enables/disables the inclusion of `spray.servlet.ServletRequestInfoHeader` in the
  # headers of the HTTP request sent to the service actor.
  servlet-request-access = off

  # Enables/disables the logging of warning messages in case an incoming
  # message (request or response) contains an HTTP header which cannot be
  # parsed into its high-level model class due to incompatible syntax.
  # Note that, independently of this settings, spray will accept messages
  # with such headers as long as the message as a whole would still be legal
  # under the HTTP specification even without this header.
  # If a header cannot be parsed into a high-level model instance it will be
  # provided as a `RawHeader`.
  illegal-header-warnings = on

  # Sets the strictness mode for parsing request target URIs.
  # The following values are defined:
  #
  # `strict`: RFC3986-compliant URIs are required,
  #     a 400 response is triggered on violations
  #
  # `relaxed`: all visible 7-Bit ASCII chars are allowed
  #
  # `relaxed-with-raw-query`: like `relaxed` but additionally
  #     the URI query is not parsed, but delivered as one raw string
  #     as the `key` value of a single Query structure element.
  #
  uri-parsing-mode = relaxed
}

port = 8090
