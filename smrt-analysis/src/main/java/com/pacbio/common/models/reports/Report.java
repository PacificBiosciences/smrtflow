/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.pacbio.common.models.reports;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Report extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Report\",\"namespace\":\"com.pacbio.common.models.reports\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"desc\":\"Pbreports style id, must only have [A-z][0-9]_\"},{\"name\":\"attributes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReportAttribute\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"value\",\"type\":[\"string\",\"int\",\"float\"]}]}}},{\"name\":\"plotGroups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PlotGroup\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"legend\",\"type\":[\"string\",\"null\"],\"desc\":\"Not clear what the usecase is of this\"},{\"name\":\"thumbnail\",\"type\":[\"string\",\"null\"]},{\"name\":\"plots\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReportPlot\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"desc\":\"Plot Id\"},{\"name\":\"image\",\"type\":\"string\",\"desc\":\"Relative Path to Image\"},{\"name\":\"caption\",\"type\":[\"string\",\"null\"],\"desc\":\"Caption of the Plot\"},{\"name\":\"thumbnail\",\"type\":[\"string\",\"null\"],\"desc\":\"Relative path to thumbnail of the Plot\"}]}}}]}}},{\"name\":\"tables\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReportTable\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\",\"desc\":\"Title of the Table\"},{\"name\":\"columns\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReportTableColumn\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"header\",\"type\":\"string\"},{\"name\":\"value\",\"type\":{\"type\":\"array\",\"items\":[\"int\",\"float\"]},\"desc\":\"Column values. Attention to mixed-types attempting to represent 'NA'\"}]}},\"desc\":\"List of Columns\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.util.List<com.pacbio.common.models.reports.ReportAttribute> attributes;
  @Deprecated public java.util.List<com.pacbio.common.models.reports.PlotGroup> plotGroups;
  @Deprecated public java.util.List<com.pacbio.common.models.reports.ReportTable> tables;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Report() {}

  /**
   * All-args constructor.
   */
  public Report(java.lang.CharSequence id, java.util.List<com.pacbio.common.models.reports.ReportAttribute> attributes, java.util.List<com.pacbio.common.models.reports.PlotGroup> plotGroups, java.util.List<com.pacbio.common.models.reports.ReportTable> tables) {
    this.id = id;
    this.attributes = attributes;
    this.plotGroups = plotGroups;
    this.tables = tables;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return attributes;
    case 2: return plotGroups;
    case 3: return tables;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: attributes = (java.util.List<com.pacbio.common.models.reports.ReportAttribute>)value$; break;
    case 2: plotGroups = (java.util.List<com.pacbio.common.models.reports.PlotGroup>)value$; break;
    case 3: tables = (java.util.List<com.pacbio.common.models.reports.ReportTable>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   */
  public java.util.List<com.pacbio.common.models.reports.ReportAttribute> getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   *
   * @param value the value to set.
   */
  public void setAttributes(java.util.List<com.pacbio.common.models.reports.ReportAttribute> value) {
    this.attributes = value;
  }

  /**
   * Gets the value of the 'plotGroups' field.
   */
  public java.util.List<com.pacbio.common.models.reports.PlotGroup> getPlotGroups() {
    return plotGroups;
  }

  /**
   * Sets the value of the 'plotGroups' field.
   * @param value the value to set.
   */
  public void setPlotGroups(java.util.List<com.pacbio.common.models.reports.PlotGroup> value) {
    this.plotGroups = value;
  }

  /**
   * Gets the value of the 'tables' field.
   */
  public java.util.List<com.pacbio.common.models.reports.ReportTable> getTables() {
    return tables;
  }

  /**
   * Sets the value of the 'tables' field.
   * @param value the value to set.
   */
  public void setTables(java.util.List<com.pacbio.common.models.reports.ReportTable> value) {
    this.tables = value;
  }

  /** Creates a new Report RecordBuilder */
  public static com.pacbio.common.models.reports.Report.Builder newBuilder() {
    return new com.pacbio.common.models.reports.Report.Builder();
  }
  
  /** Creates a new Report RecordBuilder by copying an existing Builder */
  public static com.pacbio.common.models.reports.Report.Builder newBuilder(com.pacbio.common.models.reports.Report.Builder other) {
    return new com.pacbio.common.models.reports.Report.Builder(other);
  }
  
  /** Creates a new Report RecordBuilder by copying an existing Report instance */
  public static com.pacbio.common.models.reports.Report.Builder newBuilder(com.pacbio.common.models.reports.Report other) {
    return new com.pacbio.common.models.reports.Report.Builder(other);
  }
  
  /**
   * RecordBuilder for Report instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Report>
    implements org.apache.avro.data.RecordBuilder<Report> {

    private java.lang.CharSequence id;
    private java.util.List<com.pacbio.common.models.reports.ReportAttribute> attributes;
    private java.util.List<com.pacbio.common.models.reports.PlotGroup> plotGroups;
    private java.util.List<com.pacbio.common.models.reports.ReportTable> tables;

    /** Creates a new Builder */
    private Builder() {
      super(com.pacbio.common.models.reports.Report.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.pacbio.common.models.reports.Report.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.plotGroups)) {
        this.plotGroups = data().deepCopy(fields()[2].schema(), other.plotGroups);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tables)) {
        this.tables = data().deepCopy(fields()[3].schema(), other.tables);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Report instance */
    private Builder(com.pacbio.common.models.reports.Report other) {
            super(com.pacbio.common.models.reports.Report.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.plotGroups)) {
        this.plotGroups = data().deepCopy(fields()[2].schema(), other.plotGroups);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tables)) {
        this.tables = data().deepCopy(fields()[3].schema(), other.tables);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.pacbio.common.models.reports.Report.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.pacbio.common.models.reports.Report.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'attributes' field */
    public java.util.List<com.pacbio.common.models.reports.ReportAttribute> getAttributes() {
      return attributes;
    }
    
    /** Sets the value of the 'attributes' field */
    public com.pacbio.common.models.reports.Report.Builder setAttributes(java.util.List<com.pacbio.common.models.reports.ReportAttribute> value) {
      validate(fields()[1], value);
      this.attributes = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'attributes' field has been set */
    public boolean hasAttributes() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'attributes' field */
    public com.pacbio.common.models.reports.Report.Builder clearAttributes() {
      attributes = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'plotGroups' field */
    public java.util.List<com.pacbio.common.models.reports.PlotGroup> getPlotGroups() {
      return plotGroups;
    }
    
    /** Sets the value of the 'plotGroups' field */
    public com.pacbio.common.models.reports.Report.Builder setPlotGroups(java.util.List<com.pacbio.common.models.reports.PlotGroup> value) {
      validate(fields()[2], value);
      this.plotGroups = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'plotGroups' field has been set */
    public boolean hasPlotGroups() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'plotGroups' field */
    public com.pacbio.common.models.reports.Report.Builder clearPlotGroups() {
      plotGroups = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'tables' field */
    public java.util.List<com.pacbio.common.models.reports.ReportTable> getTables() {
      return tables;
    }
    
    /** Sets the value of the 'tables' field */
    public com.pacbio.common.models.reports.Report.Builder setTables(java.util.List<com.pacbio.common.models.reports.ReportTable> value) {
      validate(fields()[3], value);
      this.tables = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'tables' field has been set */
    public boolean hasTables() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'tables' field */
    public com.pacbio.common.models.reports.Report.Builder clearTables() {
      tables = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Report build() {
      try {
        Report record = new Report();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.attributes = fieldSetFlags()[1] ? this.attributes : (java.util.List<com.pacbio.common.models.reports.ReportAttribute>) defaultValue(fields()[1]);
        record.plotGroups = fieldSetFlags()[2] ? this.plotGroups : (java.util.List<com.pacbio.common.models.reports.PlotGroup>) defaultValue(fields()[2]);
        record.tables = fieldSetFlags()[3] ? this.tables : (java.util.List<com.pacbio.common.models.reports.ReportTable>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
