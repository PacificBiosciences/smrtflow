/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pacbio.common.models.contracts;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ToolInputFile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3480375962717562074L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ToolInputFile\",\"namespace\":\"com.pacbio.common.models.contracts\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"Id of the task input\"},{\"name\":\"file_type_id\",\"type\":\"string\",\"doc\":\"PacBio File Type identifier, PacBio.DataSet.SubreadSet\"},{\"name\":\"title\",\"type\":\"string\",\"doc\":\"Display Name\"},{\"name\":\"description\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Id of the task input */
  @Deprecated public java.lang.CharSequence id;
  /** PacBio File Type identifier, PacBio.DataSet.SubreadSet */
  @Deprecated public java.lang.CharSequence file_type_id;
  /** Display Name */
  @Deprecated public java.lang.CharSequence title;
  @Deprecated public java.lang.CharSequence description;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ToolInputFile() {}

  /**
   * All-args constructor.
   * @param id Id of the task input
   * @param file_type_id PacBio File Type identifier, PacBio.DataSet.SubreadSet
   * @param title Display Name
   * @param description The new value for description
   */
  public ToolInputFile(java.lang.CharSequence id, java.lang.CharSequence file_type_id, java.lang.CharSequence title, java.lang.CharSequence description) {
    this.id = id;
    this.file_type_id = file_type_id;
    this.title = title;
    this.description = description;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return file_type_id;
    case 2: return title;
    case 3: return description;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: file_type_id = (java.lang.CharSequence)value$; break;
    case 2: title = (java.lang.CharSequence)value$; break;
    case 3: description = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return Id of the task input
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * Id of the task input
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'file_type_id' field.
   * @return PacBio File Type identifier, PacBio.DataSet.SubreadSet
   */
  public java.lang.CharSequence getFileTypeId() {
    return file_type_id;
  }

  /**
   * Sets the value of the 'file_type_id' field.
   * PacBio File Type identifier, PacBio.DataSet.SubreadSet
   * @param value the value to set.
   */
  public void setFileTypeId(java.lang.CharSequence value) {
    this.file_type_id = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return Display Name
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * Display Name
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Creates a new ToolInputFile RecordBuilder.
   * @return A new ToolInputFile RecordBuilder
   */
  public static com.pacbio.common.models.contracts.ToolInputFile.Builder newBuilder() {
    return new com.pacbio.common.models.contracts.ToolInputFile.Builder();
  }

  /**
   * Creates a new ToolInputFile RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ToolInputFile RecordBuilder
   */
  public static com.pacbio.common.models.contracts.ToolInputFile.Builder newBuilder(com.pacbio.common.models.contracts.ToolInputFile.Builder other) {
    return new com.pacbio.common.models.contracts.ToolInputFile.Builder(other);
  }

  /**
   * Creates a new ToolInputFile RecordBuilder by copying an existing ToolInputFile instance.
   * @param other The existing instance to copy.
   * @return A new ToolInputFile RecordBuilder
   */
  public static com.pacbio.common.models.contracts.ToolInputFile.Builder newBuilder(com.pacbio.common.models.contracts.ToolInputFile other) {
    return new com.pacbio.common.models.contracts.ToolInputFile.Builder(other);
  }

  /**
   * RecordBuilder for ToolInputFile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ToolInputFile>
    implements org.apache.avro.data.RecordBuilder<ToolInputFile> {

    /** Id of the task input */
    private java.lang.CharSequence id;
    /** PacBio File Type identifier, PacBio.DataSet.SubreadSet */
    private java.lang.CharSequence file_type_id;
    /** Display Name */
    private java.lang.CharSequence title;
    private java.lang.CharSequence description;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pacbio.common.models.contracts.ToolInputFile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.file_type_id)) {
        this.file_type_id = data().deepCopy(fields()[1].schema(), other.file_type_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.title)) {
        this.title = data().deepCopy(fields()[2].schema(), other.title);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ToolInputFile instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pacbio.common.models.contracts.ToolInputFile other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.file_type_id)) {
        this.file_type_id = data().deepCopy(fields()[1].schema(), other.file_type_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.title)) {
        this.title = data().deepCopy(fields()[2].schema(), other.title);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * Id of the task input
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * Id of the task input
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * Id of the task input
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * Id of the task input
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'file_type_id' field.
      * PacBio File Type identifier, PacBio.DataSet.SubreadSet
      * @return The value.
      */
    public java.lang.CharSequence getFileTypeId() {
      return file_type_id;
    }

    /**
      * Sets the value of the 'file_type_id' field.
      * PacBio File Type identifier, PacBio.DataSet.SubreadSet
      * @param value The value of 'file_type_id'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder setFileTypeId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.file_type_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'file_type_id' field has been set.
      * PacBio File Type identifier, PacBio.DataSet.SubreadSet
      * @return True if the 'file_type_id' field has been set, false otherwise.
      */
    public boolean hasFileTypeId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'file_type_id' field.
      * PacBio File Type identifier, PacBio.DataSet.SubreadSet
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder clearFileTypeId() {
      file_type_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * Display Name
      * @return The value.
      */
    public java.lang.CharSequence getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * Display Name
      * @param value The value of 'title'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.title = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * Display Name
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'title' field.
      * Display Name
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder clearTitle() {
      title = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.ToolInputFile.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public ToolInputFile build() {
      try {
        ToolInputFile record = new ToolInputFile();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.file_type_id = fieldSetFlags()[1] ? this.file_type_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.title = fieldSetFlags()[2] ? this.title : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
