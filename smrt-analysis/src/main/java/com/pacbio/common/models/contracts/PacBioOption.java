/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pacbio.common.models.contracts;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PacBioOption extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1959007974498020352L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PacBioOption\",\"namespace\":\"com.pacbio.common.models.contracts\",\"fields\":[{\"name\":\"default\",\"type\":[\"int\",\"string\",\"boolean\",\"float\"]},{\"name\":\"option_id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PacBioOptionType\",\"doc\":\"This needs to be considerably improved and clarified. The option type must be consistent with the value defined. 'number' MUST be removed.\",\"symbols\":[\"integer\",\"boolean\",\"string\",\"float\",\"number\"],\"aliases\":[\"PacBioOptionType\"]},\"doc\":\"PacBio task option type\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Object default$;
  @Deprecated public java.lang.CharSequence option_id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence description;
  /** PacBio task option type */
  @Deprecated public com.pacbio.common.models.contracts.PacBioOptionType type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PacBioOption() {}

  /**
   * All-args constructor.
   * @param default$ The new value for default
   * @param option_id The new value for option_id
   * @param name The new value for name
   * @param description The new value for description
   * @param type PacBio task option type
   */
  public PacBioOption(java.lang.Object default$, java.lang.CharSequence option_id, java.lang.CharSequence name, java.lang.CharSequence description, com.pacbio.common.models.contracts.PacBioOptionType type) {
    this.default$ = default$;
    this.option_id = option_id;
    this.name = name;
    this.description = description;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return default$;
    case 1: return option_id;
    case 2: return name;
    case 3: return description;
    case 4: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: default$ = (java.lang.Object)value$; break;
    case 1: option_id = (java.lang.CharSequence)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: description = (java.lang.CharSequence)value$; break;
    case 4: type = (com.pacbio.common.models.contracts.PacBioOptionType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'default$' field.
   * @return The value of the 'default$' field.
   */
  public java.lang.Object getDefault$() {
    return default$;
  }

  /**
   * Sets the value of the 'default$' field.
   * @param value the value to set.
   */
  public void setDefault$(java.lang.Object value) {
    this.default$ = value;
  }

  /**
   * Gets the value of the 'option_id' field.
   * @return The value of the 'option_id' field.
   */
  public java.lang.CharSequence getOptionId() {
    return option_id;
  }

  /**
   * Sets the value of the 'option_id' field.
   * @param value the value to set.
   */
  public void setOptionId(java.lang.CharSequence value) {
    this.option_id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return PacBio task option type
   */
  public com.pacbio.common.models.contracts.PacBioOptionType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * PacBio task option type
   * @param value the value to set.
   */
  public void setType(com.pacbio.common.models.contracts.PacBioOptionType value) {
    this.type = value;
  }

  /**
   * Creates a new PacBioOption RecordBuilder.
   * @return A new PacBioOption RecordBuilder
   */
  public static com.pacbio.common.models.contracts.PacBioOption.Builder newBuilder() {
    return new com.pacbio.common.models.contracts.PacBioOption.Builder();
  }

  /**
   * Creates a new PacBioOption RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PacBioOption RecordBuilder
   */
  public static com.pacbio.common.models.contracts.PacBioOption.Builder newBuilder(com.pacbio.common.models.contracts.PacBioOption.Builder other) {
    return new com.pacbio.common.models.contracts.PacBioOption.Builder(other);
  }

  /**
   * Creates a new PacBioOption RecordBuilder by copying an existing PacBioOption instance.
   * @param other The existing instance to copy.
   * @return A new PacBioOption RecordBuilder
   */
  public static com.pacbio.common.models.contracts.PacBioOption.Builder newBuilder(com.pacbio.common.models.contracts.PacBioOption other) {
    return new com.pacbio.common.models.contracts.PacBioOption.Builder(other);
  }

  /**
   * RecordBuilder for PacBioOption instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PacBioOption>
    implements org.apache.avro.data.RecordBuilder<PacBioOption> {

    private java.lang.Object default$;
    private java.lang.CharSequence option_id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence description;
    /** PacBio task option type */
    private com.pacbio.common.models.contracts.PacBioOptionType type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pacbio.common.models.contracts.PacBioOption.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.default$)) {
        this.default$ = data().deepCopy(fields()[0].schema(), other.default$);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.option_id)) {
        this.option_id = data().deepCopy(fields()[1].schema(), other.option_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PacBioOption instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pacbio.common.models.contracts.PacBioOption other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.default$)) {
        this.default$ = data().deepCopy(fields()[0].schema(), other.default$);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.option_id)) {
        this.option_id = data().deepCopy(fields()[1].schema(), other.option_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'default$' field.
      * @return The value.
      */
    public java.lang.Object getDefault$() {
      return default$;
    }

    /**
      * Sets the value of the 'default$' field.
      * @param value The value of 'default$'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder setDefault$(java.lang.Object value) {
      validate(fields()[0], value);
      this.default$ = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'default$' field has been set.
      * @return True if the 'default$' field has been set, false otherwise.
      */
    public boolean hasDefault$() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'default$' field.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder clearDefault$() {
      default$ = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'option_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getOptionId() {
      return option_id;
    }

    /**
      * Sets the value of the 'option_id' field.
      * @param value The value of 'option_id'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder setOptionId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.option_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'option_id' field has been set.
      * @return True if the 'option_id' field has been set, false otherwise.
      */
    public boolean hasOptionId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'option_id' field.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder clearOptionId() {
      option_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * PacBio task option type
      * @return The value.
      */
    public com.pacbio.common.models.contracts.PacBioOptionType getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * PacBio task option type
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder setType(com.pacbio.common.models.contracts.PacBioOptionType value) {
      validate(fields()[4], value);
      this.type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * PacBio task option type
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'type' field.
      * PacBio task option type
      * @return This builder.
      */
    public com.pacbio.common.models.contracts.PacBioOption.Builder clearType() {
      type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public PacBioOption build() {
      try {
        PacBioOption record = new PacBioOption();
        record.default$ = fieldSetFlags()[0] ? this.default$ : (java.lang.Object) defaultValue(fields()[0]);
        record.option_id = fieldSetFlags()[1] ? this.option_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.type = fieldSetFlags()[4] ? this.type : (com.pacbio.common.models.contracts.PacBioOptionType) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
